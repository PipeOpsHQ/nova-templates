server:
  retention: "30d"

  ingress:
    ## If true, Prometheus server Ingress will be created
    ##
    enabled: true

    annotations: {
      ingress.kubernetes.io/ssl-redirect: "true",
      kubernetes.io/tls-acme: "true",
      cert-manager.io/cluster-issuer: "letsencrypt-prod",
      kubernetes.io/ingress.class: "nginx",
      nginx.ingress.kubernetes.io/auth-type: "basic",
      nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required',
      nginx.ingress.kubernetes.io/auth-secret: ${secretName}
    }

    ## Prometheus server Ingress hostnames
    ## Must be provided if Ingress is enabled
    ##
    hosts:
      - ${host}

    ## Prometheus server Ingress TLS configuration
    ## Secrets must be manually created in the namespace
    ##
    tls:
      - secretName: prometheus-server-tls
        hosts:
          - ${host}

    extraPaths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: prometheus-server
            port:
              number: 80

  statefulSet:
    enabled: true
    replicas: 1
    podManagementPolicy: Parallel
    revisionHistoryLimit: 10
    updateStrategy:
      type: RollingUpdate
    volumeClaimTemplates:
      - metadata:
          name: prometheus-db
        spec:
          storageClassName: standard
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 10Gi
    podAnnotations:
      prometheus.io/scrape: 'true'
      prometheus.io/path: /metrics
      prometheus.io/port: 'web'
    podLabels:
      app: prometheus
      release: stable
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - prometheus
              topologyKey: kubernetes.io/hostname
    securityContext:
      fsGroup: 2000
      runAsUser: 1000


alertmanager:
  enabled: false

networkPolicy:
  ## Enable creation of NetworkPolicy resources.
  enabled: true