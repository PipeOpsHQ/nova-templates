## If nil, select own namespace. Namespaces to be selected for scrapeConfig discovery.
## If null, exclude the field from the prometheusSpec (keeping downward compatibility with older versions of CRD)
alertmanager:
  ingress:
    annotations: 
      cert-manager.io/cluster-issuer: letsencrypt-production
      kubernetes.io/tls-acme: "true"
      kubernetes.io/ingress.class: "nginx"
      ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/auth-type: basic
      nginx.ingress.kubernetes.io/auth-secret: kube-alert-manager-auth
      nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
    enabled: true
    hosts:
    - ${alert-manager-host}
    paths:
    - /
    pathType: Prefix
    tls: 
    - hosts:
      - ${alert-manager-host}
      secretName: kube-alertmanager-tls

grafana:
  additionalDataSources:
    - name: loki
      type: loki
      url: http://grafana-loki-querier:3100
  adminPassword: ${password}
  adminUser: ${username}
  ingress:
    annotations: 
      cert-manager.io/cluster-issuer: letsencrypt-production
      kubernetes.io/tls-acme: "true"
      kubernetes.io/ingress.class: "nginx"
      ingress.kubernetes.io/ssl-redirect: "true"
    enabled: true
    hosts: 
    - ${kube-grafana-host}
    paths:
    - /
    pathType: Prefix
    tls: 
    - hosts:
      - ${kube-grafana-host}
      secretName: kube-grafana-tls

prometheus:
  prometheusSpec:
    scrapeConfigNamespaceSelector: 
      matchLabels:
        prometheus: ${namespace}
  ingress: 
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-production
      kubernetes.io/tls-acme: "true"
      kubernetes.io/ingress.class: "nginx"
      ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/auth-type: basic
      nginx.ingress.kubernetes.io/auth-secret: kube-prom-auth
      nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
    enabled: true
    hosts:
    - ${kube-prom-host}
    paths:
    - /
    tls:
    - hosts:
      - ${kube-prom-host}
      secretName: kube-prom-tls